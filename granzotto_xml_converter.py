{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPG4oY5KZMwqJhcIFSar8+k",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/CoPhi/mia/blob/main/granzotto_xml_converter.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PD4Vp0BDWSey",
        "outputId": "40d5afe7-1025-416d-c29c-8d9485619d52",
        "collapsed": true
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: python-docx in /usr/local/lib/python3.10/dist-packages (1.1.2)\n",
            "Requirement already satisfied: lxml>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from python-docx) (5.3.0)\n",
            "Requirement already satisfied: typing-extensions>=4.9.0 in /usr/local/lib/python3.10/dist-packages (from python-docx) (4.12.2)\n",
            "Requirement already satisfied: python-Levenshtein in /usr/local/lib/python3.10/dist-packages (0.26.1)\n",
            "Requirement already satisfied: Levenshtein==0.26.1 in /usr/local/lib/python3.10/dist-packages (from python-Levenshtein) (0.26.1)\n",
            "Requirement already satisfied: rapidfuzz<4.0.0,>=3.9.0 in /usr/local/lib/python3.10/dist-packages (from Levenshtein==0.26.1->python-Levenshtein) (3.10.1)\n",
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n",
            " [ I ] \n",
            " [ I ]  \n",
            " [ I ]  \n",
            " [ I ]   \n",
            " \n",
            "\n",
            " Περ φὰρ οὔνανάβε, κε φόσε πάσα | //15// ἰκουλούμπα λαβορΐα ∙ δε | μπούκα πίε, //30// ἀτόγϊαντὸ πϊ ά  |  δο περ πά σω ∙ δα κελ κε τάζε ὑκουλού|μπου ∙ λαβὸλ ∙ δεφοῦντϊ πί ε //10// | [26 v ]  κε σαρΐα οὐτερ τζο δε μπού κα ∙ ἐτ ἥν|τελ τρὲ πίε ∙ λαβὸλ δο ἡ τέρ τζη ∙ δε | λαμποῦκα κε σασαρΐα πίε //20// ην | πον τάλ δα μπάσο πίε //10// κε σερά|βε ∙ οὔνο τέρ τζο δε λαμπούκα ∙ ἡν | μπουτάλ ∙ δϊ φὰ κουβέρτα δο η τέρ|τζη ∙ δεκέη ∙ δαμπάσω, κε σαρία πίε | //7// μάγκο κου ἄρτα ∙ δαστέλα δαπού|πα, τάντοκουάντο ∙ σοὴν μπουτάλ ∙ | κε σαρΐα πΐε //10// λαστέλ(α) δα προύα ∙ |  ̓ϊδο ἡ τέρτζο ∙ δεκέ η ∙ δαποῦ πα | κε σαρΐα πίε //7// μάνκο κου ἄρτα ∙ | ἡν ρἐγία λαβοράβε πΐε //34// ἀσπαρ|ταδόλο ∙ περλακολόμπασ ∙ σοιλα | κουλούμπα ∙ σϊ α πά σα //15// λαμη|τά δε κηντέζε ∙ κεσόνο, σέσται ἐν μέν|τζο ∙ ἀλὰ μέτα δε σέσται ἐν μέντζο σα|ρΐα ∙ τρὲ ∙ ἐοῦν κάρτ(ο) ∙ ἐν δάρσε κου|ἔλε ∙ τρὲ πάρτε ∙   κε σαρΐα, πίε //4// | ἐ πί ε //34// λαβὸλ ἠν ρέ γϊα λαδήτα | νάβε :- \n",
            " Per fàr ou͗́nanáve, ke fóse pása | //15// i͗kouloúmpa lavoriḯa ∙ de | mpoúka píe, //30// a͗tógïantò pï á  |  do per pá soː ∙ da kel ke táze y͑kouloú|mpou ∙ lavòl ∙ defoũntï pí e //10// | [26 v ]  ke sariḯa ou͗ter tzo de mpoú ka ∙ e͗t i͑́ːn|tel trè píe ∙ lavòl do i͑ː tér tziː ∙ de | lampoũka ke sasariḯa píe //20// iːn | pon tál da mpáso píe //10// ke será|ve ∙ ou͗́no tér tzo de lampoúka ∙ i͑ːn | mpoutál ∙ dï fà kouvérta do iː tér|tziː ∙ dekéiː ∙ dampásoː, ke saría píe | //7// mágko kou a͗́rta ∙ dastéla dapoú|pa, tántokouánto ∙ soìːn mpoutál ∙ | ke sariḯa piḯe //10// lastél(a) da proúa ∙ |  ̓ïdo i͑ː tértzo ∙ deké iː ∙ dapoũ pa | ke sariḯa píe //7// mánko kou a͗́rta ∙ | i͑ːn re͗gía lavoráve piḯe //34// a͗spar|tadólo ∙ perlakolómpas ∙ soila | kouloúmpa ∙ sï a pá sa //15// lamiː|tá de kiːntéze ∙ kesóno, séstai e͗n mén|tzo ∙ a͗là méta de séstai e͗n méntzo sa|riḯa ∙ trè ∙ e͗oũn kárt(o) ∙ e͗n dárse kou|e͗́le ∙ trè párte ∙   ke sariḯa, píe //4// | e͗ pí e //34// lavòl i͗ːn ré gïa ladíːta | náve :-  \n",
            " Per far ounanave, ke fose pasa | //15// ikouloumpa lavoria ∙ de | mpouka pie, //30// atogianto pi à  |  do per pà so ∙ da kel ke taze ykoulou|mpou ∙ lavol ∙ defounti pi e //10// | [26 v ]  ke saria outer tzo de mpou ka ∙ et in|tel trè pie ∙ lavol do i ter tzi ∙ de | lampouka ke sasaria pie //20// in | pon tal da mpaso pie //10// ke sera|ve ∙ ouno ter tzo de lampouka ∙ in | mpoutal ∙ di fà kouverta do i ter|tzi ∙ dekei ∙ dampaso, ke saria pie | //7// magko kou arta ∙ dastela dapou|pa, tantokouanto ∙ soin mpoutal ∙ | ke saria pie //10// lastel(a) da proua ∙ |  ̓ido i tertzo ∙ deké i ∙ dapou pa | ke saria pie //7// manko kou arta ∙ | in regia lavorave pie //34// aspar|tadolo ∙ perlakolompas ∙ soila | kouloumpa ∙ si a pà sa //15// lami|tà de kinteze ∙ kesono, sestai en men|tzo ∙ alà meta de sestai en mentzo sa|ria ∙ trè ∙ eoun kart(o) ∙ en darse kou|ele ∙ trè parte ∙   ke saria, pie //4// | e pi e //34// lavol in ré gia ladita | nave :-  \n",
            " Per far ounanave, che fose pasa | //15// icoulou/m?(p|b)/a lavoria ∙ de | bouca pie, //30// atogia/n?(t|d)/o pi à  |  do per pà so ∙ da chel che taze icoulou|/m?(p|b)/ou ∙ lavol ∙ defou/n?(t|d)/i pi e //10// | [26 v ]  che saria outer ço de bou ca ∙ et in|tel trè pie ∙ lavol do i ter çi ∙ de | la/m?(p|b)/ouca che sasaria pie //20// in | pon tal da baso pie //10// che sera|ve ∙ ouno ter ço de la/m?(p|b)/ouca ∙ in | boutal ∙ di fa couverta do i ter|çi ∙ dechei ∙ da/m?(p|b)/aso, che saria pie | //7// magco cou arta ∙ dastela dapou|pa, ta/n?(t|d)/ocoua/n?(t|d)/o ∙ sin boutal ∙ | che saria pie //10// lastel(a) da proua ∙ |  ̓ido i terço ∙ decé i ∙ dapou pa | che saria pie //7// manco cou arta ∙ | in regia lavorave pie //34// aspar|tadolo ∙ perlacolo/m?(p|b)/as ∙ sila | coulou/m?(p|b)/a ∙ si a pà sa //15// lami|tà de chi/n?(t|d)/eze ∙ chesono, seste en men|ço ∙ alà meta de seste en me/n?(t|d)/zo sa|ria ∙ trè ∙ eoun cart(o) ∙ en darse cou|ele ∙ trè parte ∙   che saria, pie //4// | e pi e //34// lavol in ré gia ladita | nave :-   \n",
            " [26r]   Cum (en) za|mento  de | una nave. \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Per far una nave che  fose  pasa | 15 i  culumba , la  voria  de | buca pie 30,  atoiando   pi{ ά::e} | do per paso da  chel  che  ta [l]  xé  i  culu|mb { ου ::a}. La  vol  de  fundi  pie 10, | [26v]  che  saria  u terzo  de buca. Et  in|tel   trepìe  la  vol   doi  terzi de | la buca, che <sa> saria  pie 20. In |  pontal  da baso pie 10, che  sera|ve  uno terzo de la buca. In |  butal  { δ:: s}i fa  cuverta   doi   ter|zi  de  chei  da baso, che  saria  pie | 7 manco quarta. { δ:: L}a  stela  da  pu|pa  tanto quanto so in  butal , | che  saria  pie 10. La  stel (a) da prua | i  doi   terz { ο ::i} de  chei  da pupa, | che  saria  pie 7 manco quarta. | In  reia  la  vorave  pie 34,  aspar|tadolo  per la colomba<s>: si la |  culumba  sia pasa 15, la  mi|tà  de  chindexe , che sono seste e  mme|zo ; a la metà de seste e  mmezo   sa|ria  tre e un  cart (o); e  ddarse   qu|ele  tre parte, che  saria  pie 4. | E pie 34 la  vol  in  reia  la dita | nave. \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [ II ] ×  ἄληὀρμηνϊα  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [27 r ]   Λα   μπάλα   δελτίμο   λαβόλέσερ   λάργα  |  περλαμητὰ  ∙  δελαστέλα  ∙  ἐφάρλο  ∙ |  πΐ   ου   πρέστο   οὐν   δέο  ∙  πίου   πίου   γρή | σο   δελάστα   περ   μπάντ ( α ) ∙  κα   οὖν   πε   δα  |  λαργήτζα  ∙  κουβερναρὰ   μέγϊο  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " La  bala  del  timó  la  vol   eser  larga | per la  mità  de l’ astela , e farlo | più presto un  deo  più <più> gr{ ή ::o }|so de l’asta per band(a) c’à un  pè  da |  larghiza :  guvernarà   meio . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [ III ] ×  ἄληὀρμηνϊα  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Ραζὸ ,  δαγαρνὴρ   λαδίτα ,  νάβε  ∙  ὀνδε  |  κησόρτε   σεβόγϊα  ∙  περούνανάβε  ∙  δε  |  μπότε   σί   ε   τζέντ ( ο ) ∙  φΐνα   μήλαι  ∙  σϊτό | δε  ∙  σϊτέντε  ∙  νάβε   γρόσα  ∙  ἐταμήλε   πού | τε ,  ἡνσούζο  ∙  σὲ   ἠντέντε  ∙  καράκα   ἐ   ού | νανάβε  ∙  δε   σΐ   ε   τζέντ ( ο ) ∙  μποτε  ∙  ἠν   τρε  |  ζέντ ( ο ),  σϊτέντε   μπάλτζα  ∙  ἐ   οὐν   ἀ   δϊ   τρε  |  ζέντο  ∙  ἠν   τζόζο   σε   τέν   τε   καραβέλα  :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Raxó  da  garnir  la dita nave, onde | chi sorte se  voia , per una nave de |  bote   sie   zent (o) fina  mile , <s’ ito|de > s’ itende  nave  grosa . E da  mile   bu|te  in  suxo , se intende  caraca . E  u|na  nave de  sie   zent (o)  bote  in  tre|xent (o), s’ itende  balza. E una di  tre|xento  in  zoxo , se ’tende  caravela . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [ IV ] ×  ἄληὀρμηνϊα  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Ούνανάβε   κε   ἄμπϊα  //30//  πί   ε   δε   μπό | κα   λαβὸλ  ∙  δε   αλμπουρο   πάσα  //20// |  ἀκαβὰλ   δολό   περ   ἤλ   τρε   πϊ   ε   σϊ   βολέσϊ  |  καβάρλο  ∙  περλαμποῦκα  ∙  μπούτα  |  οὔνο   τέρ   τζο ,  ἔτ   ρεστάρε   πίε  //20//  ἀ -| τζήο   περ   ούνα   πάσο   κε   σαρΐα   πάσα  //20// |  δε   άλ   πουρο  :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Una nave che  abia  30 pie de  bo|ca  la  vol  de  alburo  pasa 20,  acava { λ ::n}dolo per il  trepìe . Si  volesi  | cavarlo per la buca,  buta  | uno terzo et restare pie 20,  aziò  per una paso che  saria  pasa 20 | de  alburo . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [27 v ] [ V ] ×  ἄληὀρμηνϊα  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Ἐλ  ∙  τρϊ   γκέ   το   δϊ   ἐ   τζε   κοῦ   άρτϊ  ∙  δεκουέλο  |  δελα   μαΐστρα  ∙  ἐτ   τάντο   δε   πίου  ∙  κε  |  ζή   δε   κουβέρτα   ἡ   φήν   α ,  ἀλασκάλα  ∙ |  ὁβὲρ   σπαρ   τῢρλο   περ   κΐν   το   κου   άρτ ( ο ) |  φία  ∙  τζίκουε  ∙  φαβήντη  ∙  μπού   τα  |  βΐα  ∙  οὔνα   πάρ   τϊρ   έστα  //16//  πά   σα  |  έλσου   μπο   πρέ   σω  ∙  δέκου   ἐλα   λον | κΐν   τζα   κον   τοῦτα   λα   σοῦ   μα  ∙  δελάρ | μπουρο  ∙  δελαμεντζάνα  ∙  σεγούντο  |  καὶ   σεούζα ,  ἀλ   τέ   μποδε   αν   δέσο   βο | λην   τρε   κοῦ   άρ   τη   δε   τρηκέτο  ∙  σϊλ  |  τρϊκέτο   σε   πᾶ   σα  //16//  λαμετζάνα , |  βολέ   σερε   πά   σα  //12//  ἐ   πενόνϊ   δελε  |  μαΐστρα  ∙  βολέσερ   τάντ ( ο ),  δε   γρό   σω  ∙  κομό  |  ζε  ∙  τρὲ   βόλτε   λανάβε   εἰ   μπούκα  ∙  οὐ  |  πά   σο   μάκο  :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " El  trincheto   dieze  quarti de  quelo  | de la  maistra , et tanto de più che |  xì  de  cuverta   ifina  a la scala, | over spartirlo per  chinto : quarto |  fià   zique  fa vinti,  buta  | via una parti, resta 16 pasa. | El su  bopreso  de  quela   lon|ghi <n>za. Con tuta la  suma  de l’ ar|buro  de la  mezana ,  segundo  | che se  uxa  al tempo de  andeso ,  vo|l  in tre quarti de  tricheto :  s’il  |  tricheto  sé pasa 16, la  mezana  |  vol   esere  pasa 12. E  penoni  de le |  maistra   vol   eser  tanto de  groso  como |  xé  tre volte la nave i buca u | paso  maco . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [ VI ] ×  ἄληὀρμηνϊα \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Λαν   τένα   δελ   τρϊκέντο   βολέσερ   λίτρεκου  |  ἄρ   τϊ  ∙  δε   κου   έλ   πενο  ∙  δελε   μαΐστρα  ∙ |  σίλα   μαΐστρα  ∙  ζε   πᾶ   σα ,  σεδέζε   λα | τένα   δελ   τρϊ   γκέ   το   βὸλ  ∙  ἔσερ   πᾶσα   νού || [28 r ] μερο  //12//  ἐλατένα  ∙  δελατζηβϊέρα  ∙ |  βολέσερ   δεκου   ἔλα ,  λον / κέ \\ τζα  ∙  περκὲ , |  δίοβάρδα ,  καὶ   βενήσε   ἀμάγκο  ∙  λα | τένα   δελ   τρϊκέτο  ∙  σϊπὸλ  ∙  τΐορ   κουρέλα  ∙ |  δελατζηβοϊέρα  ∙  ἐμέτερλα   σουλ   τριγκέτ ( ο ) :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " L’antena  del  trichento   vol   eser  li tre  qu|arti  de quel  penó  de le  maistra : | si la  maistra   xé  pasa  sedexe , l’ a|tena  del  trincheto   vol   eser  pasa nu|| [28 r] mero  12. E  l’atena  de la  ziviera  |  vol   eser  de  quela   longheza , perché | Dio  varda  che  venise  a manco l’ a|tena  del  tricheto : si  pol   tior  qu<r> ela  | de la  ziviera  e  meterla  sul  trincheto . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " [ VII ] ×  ἄληὀρμηνϊα  :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Λαν τένα δελα μεν τζάνα βολέσερ λόγγα | τάντο ∙ κόμο λαρ μπόρο :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " L’antena  de la  mezana   vol   eser  longa | tanto como l’arboro. \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            "    [ VIII ] ×  ἄληὀρμηνϊα  : - \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " Λαρ   μπόρο ,  δελακέμπα   ἀλτέμπω  |  ἀντίγο  ∙  σεφέβα ,  ούν   οτέρτζο  ∙  δε  |  λάρ   μπουρο ,  δελα   μαΐστρα  ∙  ἐλτέμ | πονδε   ἀδέσω  ∙  σεφὰ   σκάζη  ∙  λαμη | τὰ   δελεκρόζε  ∙  δελα   μαΐστρα  ∙  μαφέ | μον  ∙  τάντο   ἄλ   μπορο   κόμο   ἀντένα  :- \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " L’arboro de la  cheba  al tempo |  antigo  se  feva  uno terzo de | l’ arburo  de la  maistra . El  tem|po <n> de adeso se fa  scaxi  la  mi|tà  de le  croxe  de la  maistra , ma  fe|mo <n> tanto  alboro  como  antena . \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " \n",
            "\n",
            " [ IX ] ×  ἄληὀρμηνϊα  : - \n",
            " [ IX ] ×  a͗́liːo͗rmiːnïa  : -  \n",
            " [ IX ] ×  aliorminia  : -  \n",
            " [ IX ] ×  aliorminia  : -   \n",
            " \n",
            "\n",
            " Λάρμπορο   δελ   μοσκέτ ( ο ) ∙  λασοῦ   αλογκέ | τζα   οὐτέρτζο   δελ   τρϊκέτο  ∙  σϊἐλτρικέτο  ∙ |  φῶσσε   πᾶ   σα  //15//  οὔν   οτέρτζο   δε  //15// |  σαρΐα   πᾶσα  //5//,  ἐ  //5//  πᾶ   σαβορὰ   ἔ | σερ   ἐλ   μοσκέτ ( ο )  λόγγο  ∙  λάρ   μπουρο   λαβῦα  - || [28 v ]   ἀν   τένα   περ   λαμητὰ  ∙  δελ   πενὸ   δελ  |  τρϊκέτο  :- \n",
            " Lármporo   del   moskét ( o ) ∙  lasoũ   alogké | tza   ou͗tértzo   del   trïkéto  ∙  sïe͗ltrikéto  ∙ |  fõːsse   pã   sa  //15//  ou͗́n   otértzo   de  //15// |  sariḯa   pãsa  //5//,  e͗  //5//  pã   savorà   e͗́ | ser   e͗l   moskét ( o )  lóggo  ∙  lár   mpouro   lavỹa  - || [28 v ]   a͗n   téna   per   lamiːtà  ∙  del   penò   del  |  trïkéto  :-  \n",
            " Larmporo   del   mosket ( o ) ∙  lasou   alogké | tza   outertzo   del   triketo  ∙  sieltriketo  ∙ |  fosse   pà   sa  //15//  oun   otertzo   de  //15// |  saria   pasa  //5//,  e  //5//  pà   savorà   é | ser   el   mosket ( o )  loggo  ∙  lar   mpouro   lavya  - || [28 v ]   an   tena   per   lamità  ∙  del   peno   del  |  triketo  :-  \n",
            " Lar/m?(p|b)/oro   del   moschet ( o ) ∙  lasou   alogcé | ça   outerço   del   tricheto  ∙  sieltricheto  ∙ |  fosse   pà   sa  //15//  oun   oterço   de  //15// |  saria   pasa  //5//,  e  //5//  pà   savorà   é | ser   el   moschet ( o )  loggo  ∙  lar   bouro   lavia  - || [28 v ]   an   tena   per   lamità  ∙  del   peno   del  |  tricheto  :-   \n",
            " \n",
            "\n",
            " L’arboro del  moscheto  la sua  longhe|za  u terzo del  tricheto : si  el   tricheto  | fosse pasa 15, uno terzo de 15 |  saria  pasa 5, e 5 pasa  vorà   e|ser   el   moscheto  longo. L’ arburo  la { βῦ :: su}a ||  antena  per la  mità  del  penó  del |  tricheto . \n",
            " L’arboro del  mossheto  la sua  longhe|za  u terzo del  trisheto : si  el   trisheto  | fosse pasa 15, uno terzo de 15 |  saria  pasa 5, e 5 pasa  vorà   e|ser   el   mossheto  longo. L’ arburo  la  vỹ :: sua ||  antena  per la  mità  del  penó  del |  trisheto .  \n",
            " L’arboro del  mossheto  la sua  longhe|za  u terzo del  trisheto : si  el   trisheto  | fosse pasa 15, uno terzo de 15 |  saria  pasa 5, e 5 pasa  vorà   e|ser   el   mossheto  longo. L’ arburo  la  vy :: sua ||  antena  per la  mità  del  penó  del |  trisheto .  \n",
            " L’arboro del  mossheto  la sua  longhe|za  u terzo del  trisheto : si  el   trisheto  | fosse pasa 15, uno terzo de 15 |  saria  pasa 5, e 5 pasa  vorà   e|ser   el   mossheto  longo. L’ arburo  la  vi :: sua ||  a/n?(t|d)/ena  per la  mità  del  penó  del |  trisheto .   \n",
            " \n",
            "\n",
            " \n",
            "  \n",
            "  \n",
            "   \n",
            " \n",
            "\n"
          ]
        }
      ],
      "source": [
        "!pip install python-docx\n",
        "!pip install python-Levenshtein\n",
        "\n",
        "import re\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "path_to_scripts = '/content/drive/Shareddrives/allographica/colab/scripts/'\n",
        "path_to_docs = '/content/drive/Shareddrives/allographica/materiali_di_camilla_granzotto/'\n",
        "\n",
        "from drive.Shareddrives.allographica.colab.scripts.mia.transcoder import Transcoder\n",
        "from drive.Shareddrives.allographica.colab.scripts.mia.aligner import SimEval\n",
        "from drive.Shareddrives.allographica.colab.scripts.mia.aligner import StringSimEval\n",
        "from drive.Shareddrives.allographica.colab.scripts.mia.aligner import ObjectAligner\n",
        "\n",
        "grc2lat = Transcoder(path_to_scripts+'grc2lat.txt')\n",
        "grc2simpLat = Transcoder(path_to_scripts+'grc2simpLat.txt')\n",
        "simpLat2regex = Transcoder(path_to_scripts+'simpLat2regex.txt')\n",
        "\n",
        "from docx import Document\n",
        "\n",
        "# Get the name of the uploaded file\n",
        "in_file_name = path_to_docs + 'manuale_granzotto_unito.docx'\n",
        "in_file = open(in_file_name, encoding = 'utf-8')\n",
        "\n",
        "# Read the contents of the .docx file and divide by lines\n",
        "doc = Document(in_file_name)\n",
        "\n",
        "def create_para_list(doc):\n",
        "    run_list = []\n",
        "    for para in doc.paragraphs:\n",
        "        for run in para.runs:\n",
        "            if run.font.superscript:\n",
        "                run_list.append(f'{{{run.text}}}')\n",
        "            else:\n",
        "                run_list.append(run.text)\n",
        "        run_list.append('\\n')\n",
        "    text = ' '.join(run_list)\n",
        "    return text.split('\\n')\n",
        "\n",
        "para_list = create_para_list(doc)\n",
        "para_list.pop()\n",
        "\n",
        "for i, para in enumerate(para_list):\n",
        "    if i > 0 and i % 2 == 0:\n",
        "        transl = grc2lat.transcode(para)\n",
        "\n",
        "        simp_transl = grc2simpLat.transcode(para)\n",
        "\n",
        "        # Verifica se 'simp_transl' è una lista\n",
        "        if isinstance(simp_transl, list):\n",
        "            # Unisci gli elementi della lista in una stringa\n",
        "            simp_transl = ''.join(simp_transl)\n",
        "\n",
        "        regex = simpLat2regex.transcode(simp_transl)\n",
        "\n",
        "        print(para)\n",
        "        print(transl)\n",
        "        print(simp_transl)\n",
        "        print(regex)\n",
        "\n",
        "# Aggiunta di controllo per evitare IndexError\n",
        "        if i + 1 < len(para_list):\n",
        "            print(para_list[i+1])\n",
        "        else:\n",
        "            print(\"Nessun elemento successivo\")\n",
        "\n",
        "        print()\n",
        "\n",
        "in_file.close()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "from docx import Document\n",
        "from lxml import etree\n",
        "import xml.sax.saxutils as saxutils\n",
        "\n",
        "# Funzione per fare escape di &, < e > con Unicode ‹ e ›\n",
        "def escape_xml_chars(text):\n",
        "    return saxutils.escape(text, {\"<\": \"‹\", \">\": \"›\"})\n",
        "\n",
        "# Funzione per creare il file TEI\n",
        "def create_tei_xml(paragraphs):\n",
        "    TEI_NS = \"http://www.tei-c.org/ns/1.0\"\n",
        "    XML_NS = \"http://www.w3.org/XML/1998/namespace\"\n",
        "    NSMAP = {None: TEI_NS, 'xml': XML_NS}\n",
        "\n",
        "    tei = etree.Element('TEI', nsmap=NSMAP)\n",
        "    tei_header = etree.SubElement(tei, 'teiHeader')\n",
        "    file_desc = etree.SubElement(tei_header, 'fileDesc')\n",
        "\n",
        "    # Header\n",
        "    title_stmt = etree.SubElement(file_desc, 'titleStmt')\n",
        "    title = etree.SubElement(title_stmt, 'title')\n",
        "    title.text = \"Manuale per la costruzione delle navi\"\n",
        "    author = etree.SubElement(title_stmt, 'author')\n",
        "    author.text = \"Federico\"\n",
        "    publication_stmt = etree.SubElement(file_desc, 'publicationStmt')\n",
        "    pub = etree.SubElement(publication_stmt, 'p')\n",
        "    pub.text = \"Pubblicato da Camilla Granzotto, Federico Boschetti e Giulia Re\"\n",
        "    source_desc = etree.SubElement(file_desc, 'sourceDesc')\n",
        "    desc = etree.SubElement(source_desc, 'p')\n",
        "    desc.text = \"Manoscritto allografico sulla costruzione delle navi\"\n",
        "\n",
        "    # Corpo\n",
        "    text_element = etree.SubElement(tei, 'text')\n",
        "    body_element = etree.SubElement(text_element, 'body')\n",
        "\n",
        "    for para in paragraphs:\n",
        "        body_element.append(para)\n",
        "\n",
        "    return etree.tostring(tei, pretty_print=True, xml_declaration=True, encoding='UTF-8').decode('utf-8')\n",
        "\n",
        "# Funzione per leggere e formattare il file .docx\n",
        "def create_para_list_with_formatting(doc):\n",
        "    para_list = []\n",
        "    for para in doc.paragraphs:\n",
        "        p_element = etree.Element(\"p\", type=\"ita\")\n",
        "        for run in para.runs:\n",
        "            if run.text:\n",
        "                hi_element = etree.SubElement(p_element, \"hi\", rend=\"bold\") if run.bold else \\\n",
        "                             etree.SubElement(p_element, \"hi\", rend=\"italic\") if run.italic else \\\n",
        "                             None\n",
        "                if hi_element:\n",
        "                    hi_element.text = run.text\n",
        "                else:\n",
        "                    p_element.text = (p_element.text or '') + run.text\n",
        "        para_list.append(p_element)\n",
        "    return para_list\n",
        "\n",
        "# Funzione per modificare il file TEI e aggiungere type ai <p>\n",
        "def assign_type_to_p(input_file, output_file):\n",
        "    parser = etree.XMLParser(remove_blank_text=True)\n",
        "    tree = etree.parse(input_file, parser)\n",
        "    root = tree.getroot()\n",
        "    tei_ns = {\"tei\": \"http://www.tei-c.org/ns/1.0\"}\n",
        "\n",
        "    for p in root.xpath(\"//tei:p\", namespaces=tei_ns):\n",
        "        content = \"\".join(p.itertext())\n",
        "        if any(char.isalpha() and ord(char) > 127 for char in content):\n",
        "            p.set(\"type\", \"grc\")\n",
        "        elif content.strip():\n",
        "            p.set(\"type\", \"ita\")\n",
        "\n",
        "    tree.write(output_file, pretty_print=True, xml_declaration=True, encoding=\"UTF-8\")\n",
        "\n",
        "# Funzione principale\n",
        "def main():\n",
        "    # Percorso del file .docx\n",
        "    input_docx = '/content/drive/Shareddrives/allographica/materiali_di_camilla_granzotto/manuale_granzotto_unito.docx'\n",
        "    intermediate_xml = 'output_initial.xml'\n",
        "    final_xml = 'output_final.xml'\n",
        "\n",
        "    try:\n",
        "        doc = Document(input_docx)\n",
        "    except FileNotFoundError:\n",
        "        print(f\"Errore: il file {input_docx} non è stato trovato.\")\n",
        "        return\n",
        "\n",
        "    # Crea file XML iniziale\n",
        "    para_list = create_para_list_with_formatting(doc)\n",
        "    xml_output = create_tei_xml(para_list)\n",
        "    with open(intermediate_xml, \"w\", encoding=\"utf-8\") as f:\n",
        "        f.write(xml_output)\n",
        "    print(f\"File iniziale salvato: {intermediate_xml}\")\n",
        "\n",
        "    # Modifica il file XML per aggiungere type ai <p>\n",
        "    assign_type_to_p(intermediate_xml, final_xml)\n",
        "    print(f\"File finale salvato: {final_xml}\")\n",
        "\n",
        "files.download('output_final.xml')\n",
        "main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 88
        },
        "id": "PEBl2xRdB-lc",
        "outputId": "c6f0964f-12b8-4992-ea13-c413b81f85d5"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_48fa29f2-2ac0-4f2a-8d59-6c548dd8aece\", \"output_final.xml\", 12245)"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "File iniziale salvato: output_initial.xml\n",
            "File finale salvato: output_final.xml\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-26-f27e711ce2c2>:52: FutureWarning: The behavior of this method will change in future versions. Use specific 'len(elem)' or 'elem is not None' test instead.\n",
            "  if hi_element:\n"
          ]
        }
      ]
    }
  ]
}