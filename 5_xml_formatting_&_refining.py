# -*- coding: utf-8 -*-
"""xml_formatting_&_refining

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSrGQ8sDvQOFtLTlqo7SPGqRqtc9c1Rl
"""

# Funzione per leggere e formattare il file .docx
def create_para_list_with_formatting(doc):
    para_list = []
    for para in doc.paragraphs:
        content = para.text.strip()
        if not content:
            continue

        # Riprende lang per stabilire la lingua del paragrafo
        lang = determine_language(content)

        # Creazione di <p> e segmentazione testo
        p_element = etree.Element("p")
        seg_element = etree.SubElement(p_element, "seg", type=lang)

        # Aggiunge i segmenti al paragrafo
        seg_element.text = escape_xml_chars(content)

        if seg_element.text.strip():
            para_list.append(p_element)

    return para_list

# Funzione per raffinare il linguaggio nell'XML
def refine_xml_language(xml_output):
    root = etree.fromstring(xml_output.encode('utf-8'))
    ns = {'tei': 'http://www.tei-c.org/ns/1.0'}

    # Itera su tutti gli elementi <seg>
    for seg in root.xpath("//tei:seg", namespaces=ns):
        text = seg.text or ""

        # Rimozione dei milestones per analisi
        milestone_pattern = re.compile(r'\{[^\}]+\}')
        cleaned_text = milestone_pattern.sub('', text).strip()

        # Conta caratteri greci e latini
        grc_count = len(re.findall(r'[Α-Ωα-ω]', cleaned_text))
        ita_count = len(re.findall(r'[A-Za-z]', cleaned_text))
        total_count = grc_count + ita_count

        # Calcola la percentuale di caratteri greci
        if total_count > 0:
            grc_percentage = (grc_count / total_count) * 100
            if grc_percentage <= 20:  # Soglia per correggere l'attributo
                seg.attrib['type'] = "ita"

    # Restituisci l'XML raffinato
    return etree.tostring(root, pretty_print=True, xml_declaration=True, encoding="UTF-8").decode("utf-8")

"""Questo blocco di codice crea i paragrafi e segmenta il testo per la forma definitiva dell'output. Qui abbiamo usato <p> ma questo può essere sostituito con <ab> in caso di necessità.
Alla formattazione abbiamo aggiunto una funzione che si occupa di raffinare l'xml, riprendendo il calcolo della percentuale di caratteri grc-ita per assegnare a ciascun <p> la lingua giusta.
"""